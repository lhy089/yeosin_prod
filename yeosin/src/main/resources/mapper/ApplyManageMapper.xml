<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yeosin.admin.ApplyManageDao" >
   
    <!-- 조회조건 지역 리스트 -->
	<select id="getConditionLocalList" resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				'전체'	AS LOCAL
		FROM 	DUAL
		UNION
		SELECT 	
				DISTINCT LOCAL
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1;
	</select>
	
	<!-- 조회조건 과목 리스트 -->
	<select id="getConditionSubjectList" resultType="com.yeosin.apply.SubjectDto">
		SELECT 	
				'*'		AS SUBJECTID
			,	'전체'	AS SUBJECTNAME
		FROM 	DUAL
		UNION 	
		SELECT 	
				DISTINCT SUBJECTID 
			,	SUBJECTNAME 
		FROM 	YS_SUBJECT
		WHERE 	1 = 1;
	</select>
	
	<!-- 조회조건 시험년도 리스트 -->
	<select id="getConditionExamYearList" resultType="com.yeosin.apply.ExamDto">
		SELECT 	
				'전체'	AS EXAMYEAR
			,	1 		AS SEQ
		FROM 	DUAL
		UNION
		SELECT 	DISTINCT EXAMYEAR
			,	2 		AS SEQ
		FROM 	YS_EXAM 
		WHERE 	1 = 1
		ORDER BY 
				SEQ ASC 
			,	EXAMYEAR DESC;
	</select>
	
	<!-- 관리자의 원서접수 현황 조회(원서별) -->
	<resultMap id="ApplyListByDocumentResultMap" type="com.yeosin.apply.ApplyDto">
		<result column="STUDENTCODE" property="studentCode" />
		<result column="USERID" property="userId" />
		<result column="SEATNUMBER" property="seatNumber" />
		<result column="SUBJECTID" property="subjectId" />
		<result column="RECEIPTDATE" property="receiptDate" />
		<result column="ISCANCEL" property="isCancel" />
		<result column="PAYMENTMETHOD" property="paymentMethod" />
		<result column="RECEIPTDATE" property="receiptDate" />
		<result column="PAYMENTDATE" property="paymentDate" />
		<result column="PAYMENTCANCELDATE" property="paymentCancelDate" />
		<result column="ROWNUM" property="rowNum" />
	<association property="examDto" javaType="com.yeosin.apply.ExamDto">
		<result column="EXAMDEGREE" property="examDegree" />
		<result column="EXAMDATE" property="examDate" />
	</association>
	<association property="examZoneDto" javaType="com.yeosin.apply.ExamZoneDto">
		<result column="LOCAL" property="local" />
		<result column="EXAMZONENAME" property="examZoneName" />
	</association>
	<association property="subjectDto" javaType="com.yeosin.apply.SubjectDto">
		<result column="SUBJECTNAME" property="subjectName" />
	</association>
	<association property="userDto" javaType="com.yeosin.user.UserDto">
		<result column="BIRTHDATE" property="birthDate" />
		<result column="USERNAME" property="userName" />
		<result column="GENDER" property="gender" />
		<result column="PHONENUMBER" property="phoneNumber" />
	</association>
	</resultMap>
	<select id="getApplyListByDocument" parameterType="map" resultMap="ApplyListByDocumentResultMap">
		 SELECT 	
				@ROWNUM := @ROWNUM + 1						AS ROWNUM								-- 행순서
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))	AS EXAMDEGREE	-- 시험차수
			,	R.STUDENTCODE  																		-- 수험번호
			,	U.USERNAME 																			-- 유저명
			,	R.USERID 																			-- 유저ID
			,	DATE_FORMAT(U.BIRTHDATE, '%Y-%m-%d') 		AS	BIRTHDATE							-- 생년월일
			,	EZ.LOCAL																			-- 지역
			,	EZ.EXAMZONENAME 																	-- 고사장명
			,	R.SEATNUMBER 																		-- 좌석번호
			,	R.SUBJECTID 																		-- 종목ID
			,	S.SUBJECTNAME 																		-- 종목명
			,	U.GENDER 																			-- 성별
			,	DATE_FORMAT(R.RECEIPTDATE, '%Y-%m-%d') 		AS	RECEIPTDATE							-- 접수날짜
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') 		AS 	EXAMDATE							-- 시험날짜
			,	R.ISCANCEL 																			-- 취소여부
			, 	U.PHONENUMBER																		-- 전화번호
			,	R.PAYMENTMETHOD																		-- 결제방식
			, 	R.RECEIPTDATE																		-- 접수시간
			, 	R.PAYMENTDATE																		-- 결제시간
			, 	R.PAYMENTCANCELDATE																	-- 취소시간
		FROM 	YS_RECEIPT									R
		INNER JOIN (SELECT 	RECEIPTID, @ROWNUM := 0
					FROM 	YS_RECEIPT
					ORDER BY RECEIPTDATE DESC) 				RN	ON	RN.RECEIPTID = R.RECEIPTID 
		INNER JOIN YS_EXAM 									E	ON	E.EXAMID = R.EXAMID
		INNER JOIN YS_USER 									U 	ON 	U.USERID = R.USERID
		INNER JOIN YS_EXAMZONE 								EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_SUBJECT 								S	ON 	S.SUBJECTID = R.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.USERID LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("*")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		ORDER BY
				R.RECEIPTDATE DESC
		LIMIT 
				#{pageStart}, #{perPageNum};
	</select>
 
	<!-- 관리자의 원서접수 현황 조회(고사장별) -->
	<resultMap id="ApplyListByExamZoneResultMap" type="com.yeosin.apply.ExamZoneDto">
		<result column="LOCAL" property="local" />
		<result column="EXAMZONEID" property="examZoneId" />
		<result column="EXAMZONENAME" property="examZoneName" />
		<result column="TOTALUSERCNT" property="examTotalUserCnt" />
		<result column="LEFTOVERSEAT" property="leftOverSeat" />
		<result column="RECEIPTSEAT" property="receiptSeat" />
		<result column="ROWNUM" property="rowNum" />
	<association property="examDto" javaType="com.yeosin.apply.ExamDto">
		<result column="EXAMDEGREE" property="examDegree" />
		<result column="EXAMID" property="examId" />
		<result column="EXAMNAME" property="examName" />
		<result column="EXAMDATE" property="examDate" />
	</association>
	<association property="applyDto" javaType="com.yeosin.apply.ApplyDto">
		<result column="RECEIPTDATE" property="receiptDate" />
	</association>
	</resultMap>
	<select id="getApplyListByExamZone" parameterType="map" resultMap="ApplyListByExamZoneResultMap">
		SELECT 	
				@ROWNUM := @ROWNUM + 1														AS 	ROWNUM				-- 행순서
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))			AS	EXAMDEGREE			-- 시험차수
			,	E.EXAMID 																							-- 시험 ID
			,	E.EXAMNAME 																							-- 시험명
			,	EZ.LOCAL																							-- 수험지역
			,	EZ.EXAMZONEID 																						-- 고사장 ID
			,	EZ.EXAMZONENAME 																					-- 고사장명
			, 	EZ.EXAMROOMCNT * EZ.EXAMROOMUSERCNT  										AS	TOTALUSERCNT		-- 총좌석수
			,	RT.RECEIPTCOUNT 															AS 	RECEIPTSEAT			-- 접수현황
			,	(EZ.EXAMROOMCNT * EZ.EXAMROOMUSERCNT) - RT.RECEIPTCOUNT 					AS 	LEFTOVERSEAT		-- 남은수량
			,	CONCAT(DATE_FORMAT(E.RECEIPTSTARTDATE, '%Y-%m-%d'), 
					  ' - ',
					  DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d'))							AS 	RECEIPTDATE 		-- 접수일시
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') 										AS 	EXAMDATE			-- 시험날짜																					-- 시험일	
		FROM 	YS_EXAMZONE  					EZ
		INNER JOIN YS_EXAMANDEXAMZONEREL		EZR	ON 	EZR.EXAMZONEID = EZ.EXAMZONEID 
		INNER JOIN YS_EXAM 						E 	ON 	E.EXAMID = EZR.EXAMID 
		INNER JOIN (SELECT 	EXAMID, @ROWNUM := 0
					FROM 	YS_EXAM
					ORDER BY EXAMDATE DESC) 	RN	ON	RN.EXAMID = E.EXAMID 
		INNER JOIN 
		(
			SELECT 	
					R.EXAMID 
				,	EZ.EXAMZONEID 
				,	COUNT(R.RECEIPTID)			AS 	RECEIPTCOUNT
			FROM 	YS_RECEIPT					R 
			INNER JOIN YS_EXAMZONE				EZ	ON 	EZ.EXAMZONEID = R.EXAMZONEID 
			WHERE 	1 = 1
			AND 	R.ISCANCEL = 'N'
			GROUP BY 
					R.EXAMID 
				,	EZ.EXAMZONEID
		)	RT	ON 	RT.EXAMID = E.EXAMID 
				AND RT.EXAMZONEID = EZ.EXAMZONEID 
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR)) LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR E.EXAMNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR EZ.EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='examYearCondition != null and !examYearCondition.equals("전체")'>
			AND CONVERT(E.EXAMYEAR, CHAR) LIKE CONCAT('%', #{examYearCondition, jdbcType=VARCHAR}, '%')
		</if>
		ORDER BY 
				E.EXAMDATE DESC;
	</select>
	
	<!-- 시험, 고사장에 접수된 접수아이디 List로 가져오기 -->
	<select id="getTotalReceiptIdByExamZone" parameterType="map" resultType="String">
		SELECT 	RECEIPTID
		FROM 	YS_RECEIPT
		WHERE  	1 = 1
		AND 	ISCANCEL = 'N'
		AND 	EXAMID = #{examId, jdbcType=VARCHAR}
		AND 	EXAMZONEID = #{examZoneId, jdbcType=VARCHAR}
		ORDER BY 
				CONVERT(REPLACE(RECEIPTID, 'LPBQ', ''), SIGNED) ASC;
	</select>
	
	<!-- 좌석배치 확정 업데이트 -->
	<update id="setExamZoneSeatConfirm" parameterType="map">
		<if test="totalReceiptList != null and totalReceiptList.size != 0">
			<foreach item="receiptId" index="index" collection="totalReceiptList">
				UPDATE 	YS_RECEIPT
				SET		SEATNUMBER = #{index} + 1
				WHERE 	1 = 1
				AND		RECEIPTID = #{receiptId, jdbcType=VARCHAR};			
			</foreach>
	 	</if>
	</update>
	
	<!-- 관리자의 원서접수 현황 갯수 조회(원서별) -->
	<select id="getApplyListByDocumentCount" parameterType="map" resultType="Integer">
		SELECT 	COUNT(R.RECEIPTID)
		FROM 	YS_RECEIPT									R
		INNER JOIN YS_EXAM 									E	ON	E.EXAMID = R.EXAMID
		INNER JOIN YS_USER 									U 	ON 	U.USERID = R.USERID
		INNER JOIN YS_EXAMZONE 								EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_SUBJECT 								S	ON 	S.SUBJECTID = R.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.USERID LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("*")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		ORDER BY
				R.RECEIPTDATE DESC;
	</select>

</mapper>
