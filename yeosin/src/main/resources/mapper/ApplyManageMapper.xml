<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yeosin.admin.ApplyManageDao" >
   
    <!-- 조회조건 지역 리스트 -->
	<select id="getConditionLocalList" resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				'전체'	AS LOCAL
		FROM 	DUAL
		UNION
		SELECT 	
				DISTINCT LOCAL
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1;
	</select>
	
    <!-- 조회조건 구 리스트 -->
	<select id="getConditionLocalDetailList" parameterType="map" resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				'전체'	AS LOCALDETAIL
		FROM 	DUAL
		UNION
		SELECT 	
				DISTINCT LOCALDETAIL
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1
		
		<if test='local != null and !local.equals("전체")'>
			AND LOCAL = #{local, jdbcType=VARCHAR};
		</if>
	</select>
	
	<!-- 조회조건 과목 리스트 -->
	<select id="getConditionSubjectList" resultType="com.yeosin.apply.SubjectDto">
		SELECT 	
				'*'		AS SUBJECTID
			,	'전체'	AS SUBJECTNAME
		FROM 	DUAL
		UNION 	
		SELECT 	
				DISTINCT SUBJECTID 
			,	SUBJECTNAME 
		FROM 	YS_SUBJECT
		WHERE 	1 = 1;
	</select>
	
	<!-- 조회조건 시험년도 리스트 -->
	<select id="getConditionExamYearList" resultType="com.yeosin.apply.ExamDto">
		SELECT 	
				'전체'	AS EXAMYEAR
			,	1 		AS SEQ
		FROM 	DUAL
		UNION
		SELECT 	DISTINCT EXAMYEAR
			,	2 		AS SEQ
		FROM 	YS_EXAM 
		WHERE 	1 = 1
		ORDER BY 
				SEQ ASC 
			,	EXAMYEAR DESC;
	</select>
	
	<!-- 관리자의 원서접수 현황 조회(원서별) -->
	<resultMap id="ApplyListByDocumentResultMap" type="com.yeosin.apply.ApplyDto">
		<result column="STUDENTCODE" property="studentCode" />
		<result column="USERID" property="userId" />
		<result column="SEATNUMBER" property="seatNumber" />
		<result column="SUBJECTID" property="subjectId" />
		<result column="RECEIPTDATE" property="receiptDate" />
		<result column="ISCANCEL" property="isCancel" />
		<result column="PAYMENTMETHOD" property="paymentMethod" />
		<result column="RECEIPTDATE" property="receiptDate" />
		<result column="PAYMENTDATE" property="paymentDate" />
		<result column="PAYMENTCANCELDATE" property="paymentCancelDate" />
		<result column="ROWNUM" property="rowNum" />
	<association property="examDto" javaType="com.yeosin.apply.ExamDto">
		<result column="EXAMDEGREE" property="examDegree" />
		<result column="EXAMDATE" property="examDate" />
	</association>
	<association property="examZoneDto" javaType="com.yeosin.apply.ExamZoneDto">
		<result column="LOCAL" property="local" />
		<result column="EXAMZONENAME" property="examZoneName" />
	</association>
	<association property="subjectDto" javaType="com.yeosin.apply.SubjectDto">
		<result column="SUBJECTNAME" property="subjectName" />
	</association>
	<association property="userDto" javaType="com.yeosin.user.UserDto">
		<result column="BIRTHDATE" property="birthDate" />
		<result column="USERNAME" property="userName" />
		<result column="GENDER" property="gender" />
		<result column="PHONENUMBER" property="phoneNumber" />
	</association>
	</resultMap>
	<select id="getApplyListByDocument" parameterType="map" resultMap="ApplyListByDocumentResultMap">
		 SELECT 	
				@ROWNUM := @ROWNUM + 1						AS ROWNUM								-- 행순서
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))	AS EXAMDEGREE	-- 시험차수
			,	R.STUDENTCODE  																		-- 수험번호
			,	U.USERNAME 																			-- 유저명
			,	R.USERID 																			-- 유저ID
			,	DATE_FORMAT(U.BIRTHDATE, '%Y-%m-%d') 		AS	BIRTHDATE							-- 생년월일
			,	EZ.LOCAL																			-- 지역
			,	EZ.EXAMZONENAME 																	-- 고사장명
			,	R.SEATNUMBER 																		-- 좌석번호
			,	R.SUBJECTID 																		-- 종목ID
			,	S.SUBJECTNAME 																		-- 종목명
			,	U.GENDER 																			-- 성별
			,	DATE_FORMAT(R.RECEIPTDATE, '%Y-%m-%d') 		AS	RECEIPTDATE							-- 접수날짜
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') 		AS 	EXAMDATE							-- 시험날짜
			,	R.ISCANCEL 																			-- 취소여부
			, 	U.PHONENUMBER																		-- 전화번호
			,	R.PAYMENTMETHOD																		-- 결제방식
			, 	R.RECEIPTDATE																		-- 접수시간
			, 	R.PAYMENTDATE																		-- 결제시간
			, 	R.PAYMENTCANCELDATE																	-- 취소시간
		FROM 	YS_RECEIPT									R
		INNER JOIN (SELECT 	RECEIPTID, @ROWNUM := 0
					FROM 	YS_RECEIPT
					ORDER BY RECEIPTDATE DESC) 				RN	ON	RN.RECEIPTID = R.RECEIPTID 
		INNER JOIN YS_EXAM 									E	ON	E.EXAMID = R.EXAMID
		INNER JOIN YS_USER 									U 	ON 	U.USERID = R.USERID
		INNER JOIN YS_EXAMZONE 								EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_SUBJECT 								S	ON 	S.SUBJECTID = R.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.USERID LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("*")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='examDegreeCondition != null and !examDegreeCondition.equals("전체")'>
			AND CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR)) = #{examDegreeCondition, jdbcType=VARCHAR}
		</if>
		<if test='isCancelCondition != null and !isCancelCondition.equals("전체")'>
			AND R.ISCANCEL = #{isCancelCondition, jdbcType=VARCHAR}
		</if>
		ORDER BY
				R.RECEIPTDATE DESC
		LIMIT 
				#{pageStart}, #{perPageNum};
	</select>
 
	<!-- 관리자의 원서접수 현황 조회(고사장별) -->
	<resultMap id="ApplyListByExamZoneResultMap" type="com.yeosin.apply.ExamZoneDto">
		<result column="LOCAL" property="local" />
		<result column="EXAMZONEID" property="examZoneId" />
		<result column="EXAMZONENAME" property="examZoneName" />
		<result column="TOTALUSERCNT" property="examTotalUserCnt" />
		<result column="LEFTOVERSEAT" property="leftOverSeat" />
		<result column="RECEIPTSEAT" property="receiptSeat" />
		<result column="ROWNUM" property="rowNum" />
	<association property="examDto" javaType="com.yeosin.apply.ExamDto">
		<result column="EXAMDEGREE" property="examDegree" />
		<result column="EXAMID" property="examId" />
		<result column="EXAMNAME" property="examName" />
		<result column="EXAMDATE" property="examDate" />
	</association>
	<association property="applyDto" javaType="com.yeosin.apply.ApplyDto">
		<result column="RECEIPTDATE" property="receiptDate" />
	</association>
	</resultMap>
	<select id="getApplyListByExamZone" parameterType="map" resultMap="ApplyListByExamZoneResultMap">
		SELECT 	
				@ROWNUM := @ROWNUM + 1														AS 	ROWNUM				-- 행순서
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))			AS	EXAMDEGREE			-- 시험차수
			,	E.EXAMID 																							-- 시험 ID
			,	E.EXAMNAME 																							-- 시험명
			,	EZ.LOCAL																							-- 수험지역
			,	EZ.EXAMZONEID 																						-- 고사장 ID
			,	EZ.EXAMZONENAME 																					-- 고사장명
			, 	EZ.EXAMROOMCNT * EZ.EXAMROOMUSERCNT  										AS	TOTALUSERCNT		-- 총좌석수
			,	RT.RECEIPTCOUNT 															AS 	RECEIPTSEAT			-- 접수현황
			,	(EZ.EXAMROOMCNT * EZ.EXAMROOMUSERCNT) - RT.RECEIPTCOUNT 					AS 	LEFTOVERSEAT		-- 남은수량
			,	CONCAT(DATE_FORMAT(E.RECEIPTSTARTDATE, '%Y-%m-%d'), 
					  ' - ',
					  DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d'))							AS 	RECEIPTDATE 		-- 접수일시
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') 										AS 	EXAMDATE			-- 시험날짜																					-- 시험일	
		FROM 	YS_EXAMZONE  					EZ
		INNER JOIN YS_EXAMANDEXAMZONEREL		EZR	ON 	EZR.EXAMZONEID = EZ.EXAMZONEID 
		INNER JOIN YS_EXAM 						E 	ON 	E.EXAMID = EZR.EXAMID 
		INNER JOIN (SELECT 	EXAMID, @ROWNUM := 0
					FROM 	YS_EXAM
					ORDER BY EXAMDATE DESC) 	RN	ON	RN.EXAMID = E.EXAMID 
		INNER JOIN 
		(
			SELECT 	
					R.EXAMID 
				,	EZ.EXAMZONEID 
				,	COUNT(R.RECEIPTID)			AS 	RECEIPTCOUNT
			FROM 	YS_RECEIPT					R 
			INNER JOIN YS_EXAMZONE				EZ	ON 	EZ.EXAMZONEID = R.EXAMZONEID 
			WHERE 	1 = 1
			AND 	R.ISCANCEL = 'N'
			GROUP BY 
					R.EXAMID 
				,	EZ.EXAMZONEID
		)	RT	ON 	RT.EXAMID = E.EXAMID 
				AND RT.EXAMZONEID = EZ.EXAMZONEID 
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR)) LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR E.EXAMNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR EZ.EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='examDegreeCondition != null and !examDegreeCondition.equals("전체")'>
			AND CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR)) = #{examDegreeCondition, jdbcType=VARCHAR}
		</if>
		ORDER BY 
				E.EXAMDATE DESC
      	LIMIT 
            	#{pageStart}, #{perPageNum};
	</select>
	
	<!-- 시험, 고사장에 접수된 접수아이디 List로 가져오기 -->
	<select id="getTotalReceiptIdByExamZone" parameterType="map" resultType="String">
		SELECT 	RECEIPTID
		FROM 	YS_RECEIPT
		WHERE  	1 = 1
		AND 	ISCANCEL = 'N'
		AND 	EXAMID = #{examId, jdbcType=VARCHAR}
		AND 	EXAMZONEID = #{examZoneId, jdbcType=VARCHAR}
		ORDER BY 
				CONVERT(REPLACE(RECEIPTID, 'LPBQ', ''), SIGNED) ASC;
	</select>
	
	<!-- 좌석배치 확정 업데이트 -->
	<update id="setExamZoneSeatConfirm" parameterType="map">
		<if test="totalReceiptList != null and totalReceiptList.size != 0">
			<foreach item="receiptId" index="index" collection="totalReceiptList">
				UPDATE 	YS_RECEIPT
				SET		SEATNUMBER = #{index} + 1
				WHERE 	1 = 1
				AND		RECEIPTID = #{receiptId, jdbcType=VARCHAR};			
			</foreach>
	 	</if>
	</update>
	
	<!-- 관리자의 원서접수 현황 갯수 조회(원서별) -->
	<select id="getApplyListByDocumentCount" parameterType="map" resultType="Integer">
		SELECT 	COUNT(R.RECEIPTID)
		FROM 	YS_RECEIPT									R
		INNER JOIN YS_EXAM 									E	ON	E.EXAMID = R.EXAMID
		INNER JOIN YS_USER 									U 	ON 	U.USERID = R.USERID
		INNER JOIN YS_EXAMZONE 								EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_SUBJECT 								S	ON 	S.SUBJECTID = R.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.USERID LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("*")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='examDegreeCondition != null and !examDegreeCondition.equals("전체")'>
			AND CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR)) = #{examDegreeCondition, jdbcType=VARCHAR}
		</if>
		<if test='isCancelCondition != null and !isCancelCondition.equals("전체")'>
			AND R.ISCANCEL = #{isCancelCondition, jdbcType=VARCHAR}
		</if>
		ORDER BY
				R.RECEIPTDATE DESC;
	</select>

	<!-- 관리자의 원서접수 현황 갯수 조회(고사장별) -->
	<select id="getApplyListByExamZoneCount" parameterType="map" resultType="Integer">
	   SELECT COUNT(EZ.EXAMZONEID)
	   FROM YS_EXAMZONE EZ
	   INNER JOIN YS_EXAMANDEXAMZONEREL EZR ON EZ.EXAMZONEID = EZR.EXAMZONEID 
	   INNER JOIN YS_EXAM EX ON EZR.EXAMID = EX.EXAMID 
	   INNER JOIN 
	   (
	      SELECT    
	             R.EXAMID 
	         ,   EZ.EXAMZONEID 
	         ,   COUNT(R.RECEIPTID)         AS RECEIPTCOUNT
	      FROM    YS_RECEIPT               	R 
	      INNER JOIN YS_EXAMZONE            EZ ON EZ.EXAMZONEID = R.EXAMZONEID 
	      WHERE    1 = 1
	      AND    R.ISCANCEL = 'N'
	      GROUP BY 
	             R.EXAMID 
	         ,   EZ.EXAMZONEID
	   )   RT   ON    RT.EXAMID = EX.EXAMID 
	         	AND RT.EXAMZONEID = EZ.EXAMZONEID 
	   WHERE 1 = 1
	
	   <if test="textCondition != null and textCondition != ''">
	      AND (EX.LOCALDETAIL LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
	         OR EX.EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
	   </if>
	   <if test='localCondition != null and !localCondition.equals("전체")'>
	      AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
	   </if>
	   <if test='subjectCondition != null and !subjectCondition.equals("*")'>
	      AND EX.EXAMYEAR LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')      
	   </if>
 	   <if test='examDegreeCondition != null and !examDegreeCondition.equals("전체")'>
		  AND CONCAT(CONVERT(EX.EXAMYEAR, CHAR), '-', CONVERT(EX.EXAMDEGREE, CHAR)) = #{examDegreeCondition, jdbcType=VARCHAR}
	   </if>
	   ORDER BY
	         EX.EXAMDATE DESC;
	</select>
	
	
	<!--채점표리스트 resultMap -->
	<resultMap id="GetScorecardListResultMap" type="com.yeosin.apply.ApplyDto">
		<result column="STUDENTCODE" property="studentCode" />
		<result column="SEATNUMBER"	property="seatNumber"/>
	<association property="examZoneDto" javaType="com.yeosin.apply.ExamZoneDto">
		<result column="EXAMZONENAME" property="examZoneName" />
	</association>
	<association property="userDto" javaType="com.yeosin.user.UserDto">
		<result column="USERNAME" property="userName" />
		<result column="BIRTHDATE" property="birthDate" />
		<result column="GENDER" property="gender" />
	</association>
	<association property="subjectDto" javaType="com.yeosin.apply.SubjectDto">
		<result column="SUBJECTNAME" property="subjectName" />
	</association>
	<association property="gradeDto" javaType="com.yeosin.apply.GradeDto">
		<result column="ALLSCORE" property="allScore" />
		<result column="ISPASS" property="isPass" />
	</association>
	</resultMap>
	
	<!-- 채점리스트 조회 -->
	<select id="getScorecardList" resultMap="GetScorecardListResultMap" parameterType="map">
		SELECT
				EZ.EXAMZONENAME	-- 고사장명
			,	R.STUDENTCODE	-- 수험번호
			,	R.SEATNUMBER	-- 좌석번호
			,	U.USERNAME		-- 회원명
			,	U.BIRTHDATE		-- 생년월일
			,	U.GENDER		--	성별
			,	S.SUBJECTNAME	-- 과목
			,	G.ALLSCORE		--	총점
			,	(CASE WHEN G.ISPASS='Y' THEN '합격' WHEN G.ISPASS='N' THEN '불합격' END) AS ISPASS	-- 합격여부
		FROM	YS_RECEIPT	R
		INNER JOIN YS_EXAMZONE	EZ ON EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_USER	U ON U.USERID = R.USERID
		INNER JOIN YS_EDUCOMPLETION	EC ON (EC.BIRTHDATE = U.BIRTHDATE AND EC.GENDER = U.GENDER AND EC.USERNAME = U.USERNAME)
		INNER JOIN YS_GRADE	G ON G.RECEIPTID = R.RECEIPTID
		INNER JOIN YS_SUBJECT S ON EC.SUBJECT = S.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (EZ.EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("전체")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='isPassCondition != null and !isPassCondition.equals("전체")'>
			AND (G.ISPASS = #{isPassCondition, jdbcType=VARCHAR})
		</if>
		ORDER BY 
				R.STUDENTCODE DESC
      	LIMIT 
            	#{pageStart}, #{perPageNum};
	</select>
	
	<!--채점표 리스트 총 갯수   --> 
	<select id="getScorecardListCount" resultType="int" parameterType="map">
		SELECT	COUNT(*)
		FROM	YS_RECEIPT	R
		INNER JOIN YS_EXAMZONE	EZ ON EZ.EXAMZONEID = R.EXAMZONEID
		INNER JOIN YS_USER	U ON U.USERID = R.USERID
		INNER JOIN YS_EDUCOMPLETION	EC ON (EC.BIRTHDATE = U.BIRTHDATE AND EC.GENDER = U.GENDER AND EC.USERNAME = U.USERNAME)
		INNER JOIN YS_GRADE	G ON G.RECEIPTID = R.RECEIPTID
		INNER JOIN YS_SUBJECT S ON EC.SUBJECT = S.SUBJECTID
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND (EZ.EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR U.USERNAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
				OR R.STUDENTCODE LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND EZ.LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='subjectCondition != null and !subjectCondition.equals("전체")'>
			AND (R.SUBJECTID LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%')
				OR S.SUBJECTNAME LIKE CONCAT('%', #{subjectCondition, jdbcType=VARCHAR}, '%'))
		</if>
		<if test='isPassCondition != null and !isPassCondition.equals("전체")'>
			AND (G.ISPASS = #{isPassCondition, jdbcType=VARCHAR})
		</if>
		ORDER BY 
				R.STUDENTCODE DESC
	</select>
	
	<select id="getExamListForGradeRegistration" resultType="com.yeosin.apply.ExamDto">
		SELECT 
				EXAMID
			,  	CONCAT(SUBSTRING(EXAMYEAR,3,4),"-",EXAMDEGREE) 			AS EXAMDEGREE
			, 	DATE_FORMAT(EXAMDATE, '%Y-%m-%d') 						AS EXAMDATE
			, 	(CASE WHEN GRADESTATUS='Y' THEN '완료' ELSE '대기' END) 	AS GRADESTATUS
 		FROM  YS_EXAM
		WHERE EXAMDEGREE > 0
		ORDER BY EXAMDATE DESC
	</select>
	
	<select id="getReceiptIdByStudentCode" parameterType="String" resultType="String">
		SELECT 
				RECEIPTID
 		FROM  YS_RECEIPT
		WHERE STUDENTCODE = #{studentCode}
	</select>
	
	<select id="getExamInfoByExamId" parameterType="String" resultType="com.yeosin.apply.ExamDto">
		SELECT 
				EXAMYEAR
			, 	EXAMDEGREE
 		FROM  YS_EXAM
		WHERE EXAMID = #{examId}
	</select>
	
	<insert id="insertExcelData" parameterType="java.util.List">
    	INSERT INTO YS_GRADE 
    		(RECEIPTID, ISQUIT, ALLSCORE, ISPASS, ISQUAL, PASSCERTID, REGDATE, MODDATE)
    	VALUES
    	<foreach collection="list" item="item" separator=" , " >
        	((SELECT RECEIPTID FROM YS_RECEIPT WHERE STUDENTCODE = "${item.receiptId}"), "${item.isQuit}", "${item.allScore}", "${item.isPass}", "${item.isQual}" , "${item.passCertId}", now(), now())
   	 	</foreach>
   	 	ON DUPLICATE KEY UPDATE ISQUIT = "",
   	 		MODDATE = now()
	</insert>
	
	<update id="updateGradeStatus" parameterType="map">
		UPDATE 	YS_EXAM
		SET		GRADESTATUS =#{gradeStatus}
		WHERE 	1 = 1
			AND EXAMID = #{examId}
	</update>
	
	<delete id="deleteExcelData" parameterType="java.util.List">
		DELETE FROM YS_GRADE
		WHERE
			RECEIPTID IN
    		<foreach collection="list" item="item" index="i" open="(" separator="," close=")">
      			(SELECT RECEIPTID FROM YS_RECEIPT WHERE STUDENTCODE = "${item.receiptId}")
    		</foreach>
	</delete>
	
	<!-- 관리자의 고사장 리스트 조회 -->
	<select id="getExamZoneList" parameterType="map" resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				EXAMZONEID 													-- 고사장 ID
			,	LOCAL														-- 지역 
			,	LOCALDETAIL													-- 구
			,	EXAMZONENAME 												-- 고사장명
			,	EXAMROOMCNT 												-- 시험교실수
			,	EXAMROOMUSERCNT 											-- 교실당인원수
			,	EXAMROOMCNT * EXAMROOMUSERCNT			AS EXAMTOTALUSERCNT	-- 전체인원수
			,	CASE WHEN EXAMZONEMAP IS NULL OR 
						  EXAMZONEMAP = ''
					 THEN 'N'
					 ELSE 'Y' END						AS EXAMZONEMAP		-- 약도여부
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND	EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='localDetailCondition != null and !localDetailCondition.equals("전체")'>
			AND LOCALDETAIL LIKE CONCAT('%', #{localDetailCondition, jdbcType=VARCHAR}, '%')
		</if>
		ORDER BY 
				LOCAL 
			,	LOCALDETAIL
      	LIMIT 
            	#{pageStart}, #{perPageNum};
	</select>
	
	<!-- 관리자의 고사장 리스트 총 갯수 조회 -->
	<select id="getExamZoneListCount" parameterType="map" resultType="Integer">
		SELECT 	
				COUNT(EXAMZONEID) 
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1
		
		<if test="textCondition != null and textCondition != ''">
			AND	EXAMZONENAME LIKE CONCAT('%', #{textCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if test='localCondition != null and !localCondition.equals("전체")'>
			AND LOCAL LIKE CONCAT('%', #{localCondition, jdbcType=VARCHAR}, '%')
		</if>
		ORDER BY 
				LOCAL 
			,	LOCALDETAIL
	</select>
	
	<!-- 고사장 등록에 해당하는 고사장 1개에 대한 데이터 조회 -->
	<select id="getExamZone" parameterType="map" resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				LOCAL 													-- 지역 
			,	LOCALDETAIL 											-- 구 
			,	EXAMZONEID 												-- 고사장 ID
			,	EXAMZONENAME 											-- 고사장명
			,	EXAMROOMCNT 											-- 시험 교실수
			,	EXAMROOMUSERCNT											-- 교실당 인원수
			,	EXAMROOMCNT * EXAMROOMUSERCNT 		AS TOTALUSERCNT 	-- 전체 인원수
			, 	DESCRIPTION 											-- 주소
			,	EXAMZONEMAP 											-- 약도
		FROM 	YS_EXAMZONE 
		WHERE 	1 = 1
		AND 	EXAMZONEID = #{examZoneId, jdbcType=VARCHAR};
	</select>
	
	<!-- 고사장 ID MaxNumber 조회 -->
	<select id="getMaxExamZoneId" resultType="Integer">
		SELECT 	MAX(CONVERT(REPLACE(EXAMZONEID, 'examzone', ''), SIGNED)) 
		FROM 	YS_EXAMZONE
		WHERE 	1 = 1;
	</select>
	
	<!-- 새로운 고사장 등록 -->
	<insert id="insertExamZone" parameterType="map">
		INSERT INTO YS_EXAMZONE (EXAMZONEID, LOCAL, LOCALDETAIL, EXAMZONENAME, EXAMROOMCNT, EXAMROOMUSERCNT, TOTALUSERCNT, EXAMZONEMAP, DESCRIPTION) 
		VALUES (#{examZoneId}, #{local}, #{localDetail}, #{examZoneName}, #{examRoomCnt}, #{examRoomUserCnt}, #{examRoomCnt} * #{examRoomUserCnt}, #{mapFile}, #{address});
	</insert>
	
	<!-- 기존 고사장 수정 -->
	<insert id="updateExamZone" parameterType="map">
		UPDATE 	YS_EXAMZONE 
		SET 	LOCAL = #{local}
			,	LOCALDETAIL = #{localDetail}
			, 	EXAMZONENAME = #{examZoneName}
			, 	EXAMROOMCNT = #{examRoomCnt}
			,	EXAMROOMUSERCNT = #{examRoomUserCnt}
			, 	TOTALUSERCNT = #{examRoomCnt} * #{examRoomUserCnt}
			, 	EXAMZONEMAP = #{mapFile}
			, 	DESCRIPTION = #{address}
		WHERE 	EXAMZONEID = #{examZoneId};
	</insert>
	
	<!-- 기존 고사장 삭제(YS_EXAMZONE 테이블에 ON DELETE CASCADE 옵션적용) -->
	<insert id="deleteExamZone" parameterType="map">
		<foreach item="examZoneId" index="index" collection="examZoneList">			
			DELETE 	
			FROM 	YS_EXAMZONE 
			WHERE 	EXAMZONEID = #{examZoneId, jdbcType=VARCHAR};			
		</foreach>
	</insert>
	
	<!--시험일정등록 고사장 리스트  -->
	<select id="getExamZoneListByExamRegister"  resultType="com.yeosin.apply.ExamZoneDto">
		SELECT 	
				EXAMZONEID												-- 고사장ID
			,	EXAMZONENAME 											-- 고사장명
			,	EXAMROOMCNT 											-- 시험 교실수
			,	EXAMROOMUSERCNT											-- 교실당 인원수
			,	EXAMROOMCNT * EXAMROOMUSERCNT 		AS EXAMTOTALUSERCNT 	-- 전체 인원수
		FROM 	YS_EXAMZONE 
		WHERE 	1 = 1
	</select>
	
	<!--시험일정등록 과목 리스트 -->
	<select id="getSubjectListByExamRegister" resultType = "com.yeosin.apply.SubjectDto">
		SELECT 	
				SUBJECTID											-- 과목ID
			,	SUBJECTNAME											-- 과목이름		
		FROM 	YS_SUBJECT
		WHERE 	1 = 1
	</select>

	<!-- 조회조건 시험명 리스트 -->
	<select id="getConditionExamNameList" parameterType="map" resultType="com.yeosin.apply.ExamDto">
		SELECT
				'전체' 	AS EXAMNAME
		FROM DUAL
		UNION
		SELECT
				DISTINCT EXAMNAME
		FROM 	YS_EXAM
		WHERE 	1 = 1

		<if test='year != null and !year.equals("전체")'>
			AND EXAMYEAR = #{year, jdbcType=VARCHAR};
		</if>
	</select>

	<!-- 조회조건 시험차수 리스트 -->
	<select id="getConditionExamDegreeList" parameterType="map" resultType="com.yeosin.apply.ExamDto">
		SELECT
				'전체' AS EXAMDEGREE
		FROM DUAL
		UNION
		SELECT OD.EXAMDEGREE
		FROM
			( 	SELECT
				DISTINCT EXAMDEGREE
				FROM YS_EXAM
				WHERE 1 = 1

		<if test='examName != null and !examName.equals("전체")'>
			AND EXAMNAME = #{examName, jdbcType=VARCHAR}
		</if>

				ORDER BY EXAMDEGREE
			) OD;
	</select>

	<!-- 관리자의 시험일정 리스트 조회 -->
	<select id="getExamList" parameterType="map" resultType="com.yeosin.apply.ExamDto">
		SELECT
				EXAMID
			,	EXAMYEAR
			, 	EXAMNAME
			, 	EXAMDEGREE
			,	DATE_FORMAT(EXAMDATE, '%Y-%m-%d') AS EXAMDATE
		FROM 	YS_EXAM
		WHERE 	1 = 1

		<if test='yearCondition != null and !yearCondition.equals("전체")'>
			AND EXAMYEAR LIKE CONCAT('%', #{yearCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if
			test='examNameCondition != null and !examNameCondition.equals("전체")'>
			AND EXAMNAME LIKE CONCAT('%', #{examNameCondition, jdbcType=VARCHAR}, '%')
		</if>
		<if
			test='degreeCondition != null and !degreeCondition.equals("전체")'>
			AND EXAMDEGREE LIKE CONCAT('%', #{degreeCondition, jdbcType=VARCHAR}, '%')
		</if>
		ORDER BY
				EXAMYEAR
			, 	EXAMNAME
			, 	EXAMDEGREE
			, 	EXAMDATE
		LIMIT
			#{pageStart}, #{perPageNum};
	</select>

	<!-- 관리자의 시험일정 리스트 총 갯수 조회 -->
	<select id="getExamListCount" parameterType="map" resultType="Integer">
		SELECT
		COUNT(EXAMID)
		FROM YS_EXAM
		WHERE 1 = 1

		<if test='yearCondition != null and !yearCondition.equals("전체")'>
			AND EXAMYEAR = #{yearCondition, jdbcType=VARCHAR}
		</if>
		<if
			test='examNameCondition != null and !examNameCondition.equals("전체")'>
			AND EXAMNAME = #{examNameCondition, jdbcType=VARCHAR}
		</if>
		<if
			test='degreeCondition != null and !degreeCondition.equals("전체")'>
			AND EXAMDEGREE = #{degreeCondition, jdbcType=VARCHAR}
		</if>
	</select>

	<!-- 기존 시험 삭제 -->
	<insert id="deleteExam" parameterType="map">
		<foreach item="examId" index="index" collection="examList">
			DELETE
			FROM YS_EXAM
			WHERE EXAMID = #{examId, jdbcType=VARCHAR};
		</foreach>
	</insert>
	
	<!-- 시험 ID MaxNumber 조회 -->
	<select id="getMaxExamId" resultType="Integer">
		SELECT 	MAX(CONVERT(REPLACE(EXAMID, 'exam', ''), SIGNED)) 
		FROM 	YS_EXAM
		WHERE 	1 = 1;
	</select>
	
	<!-- 시험일정등록(EXAM 테이블) -->
	<insert id="registerExam" parameterType="com.yeosin.apply.ExamDto">
	INSERT INTO YS_EXAM
	(EXAMID, EXAMNAME, EXAMYEAR, SUBJECTID, EXAMTYPE, ISAPPROVAL, EXAMDEGREE,
	EXAMDATE, EXAMLOCAL, EXAMAREA, RECEIPTSTARTDATE, RECEIPTENDDATE, ALLREFUNDEXITDATE, ISPRACTICALEXAM,
	CERTPRINTSTARTDATE, CERTPRINTENDDATE, GRADESTARTDATE, GRADEENDDATE, EXAMCOST, PERIOD, GRADESTATUS)
	VALUES(#{examId}, #{examName}, #{examYear}, '제거대상 컬럼(종목코드)', #{examType}, #{isApproval}, #{examDegree}, #{examDate},
	'제거대상 컬럼(시험지역)', '제거대상 컬럼(시험지역)', #{receiptStartDate} , #{receiptEndDate} , '0000-00-00 00:00:00', #{isPracticalExam}, 
	#{certPrintStartDate}, #{certPrintEndDate}, #{gradeStartDate}, #{gradeEndDate}, #{examCost}, #{period}, #{gradeStatus});
	</insert>	
		
	<!-- 시험일정등록(EXAMANDSUBJECTREL 테이블) -->
	<insert id="registerExamAndSubjectRel" parameterType="map">
	INSERT INTO YS_EXAMANDSUBJECTREL
	(EXAMID, SUBJECTID)
	VALUES
	<foreach collection="subjectId" item="item" index="i" separator="," >
			(#{examId}, #{item})		
	</foreach>
	</insert>
	
	<!-- 시험일정등록(EXAMANDEXAMZONEREL 테이블) -->
	<insert id="registerExamAndExamZoneRel" parameterType="map">
	INSERT INTO YS_EXAMANDEXAMZONEREL
	(EXAMZONEID, EXAMID)
	VALUES
	<foreach collection="examZoneId" item="item" index="i" separator="," >
			(#{item}, #{examId})		
	</foreach>
	</insert>

	<!-- 조회조건 시험차수 리스트 -->
	<select id="getConditionExamYearAndDegreeList" resultType="com.yeosin.apply.ExamDto">
		SELECT
				'전체' AS EXAMDEGREE
		FROM DUAL
		UNION
		SELECT 	
				DISTINCT CONCAT(EXAMYEAR, '-', EXAMDEGREE)
		FROM 	YS_EXAM 
		WHERE 	1 = 1
		ORDER BY 
				FIELD(EXAMDEGREE, '전체') DESC, EXAMDEGREE;
	</select>
	
	<!-- 조회조건 취소여부 리스트 -->
	<select id="getConditionIsCancelList" resultType="com.yeosin.apply.ApplyDto">
		SELECT
				'전체' AS ISCANCEL
		FROM DUAL
		UNION
		SELECT 	
				DISTINCT ISCANCEL
		FROM 	YS_RECEIPT
		ORDER BY 
				FIELD(ISCANCEL, '전체', 'N', 'Y');
	</select>
	
</mapper>
