<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yeosin.apply.ApplyDao" >
   
	<!-- 로그인 유저의 원서접수 리스트 조회 -->
	<resultMap id="ApplyListResultMap" type="com.yeosin.apply.ApplyDto">
		<result column="RECEIPTID" property="receiptId" />
		<result column="USERID" property="userId" />
		<result column="EXAMID" property="examId" />
		<result column="ISCANCEL" property="isCancel"/>
 		<association property="examDto" javaType="com.yeosin.apply.ExamDto">
			<result column="EXAMNAME" property="examName" />
			<result column="EXAMDEGREE" property="examDegree"/>
			<result column="RECEIPTSTARTDATE" property="receiptStartDate" />
			<result column="RECEIPTENDDATE" property="receiptEndDate" />
			<result column="EXAMDATE" property="examDate" />
			<result column="EXAMLOCAL" property="examLocal" />
		</association>
		<association property="examZoneDto" javaType="com.yeosin.apply.ExamZoneDto">
			<result column="LOCAL" property="local" />
			<result column="LOCALDETAIL" property="localDetail" />
		</association>
	</resultMap>
	<select id="getAcceptList" parameterType="com.yeosin.apply.ApplyDto" resultMap="ApplyListResultMap">
		SELECT 	
				R.RECEIPTID 				-- 접수 ID
			,	R.USERID 					-- 유저 ID
			,	R.EXAMID					-- 시험 ID
			,   R.ISCANCEL					-- 취소여부
			,	E.EXAMNAME 					-- 시험명
			,   DATE_FORMAT(E.RECEIPTSTARTDATE, '%Y-%m-%d')    	AS RECEIPTSTARTDATE 	-- 접수시작일
         	,   DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d')       AS RECEIPTENDDATE    	-- 접수마감일
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d')				AS EXAMDATE				-- 시험일
			,	EZ.LOCALDETAIL 				-- 시험지역
		FROM 	YS_RECEIPT					R 	
		INNER JOIN YS_EXAM 					E	ON 	E.EXAMID = R.EXAMID 	
		INNER JOIN YS_EXAMZONE				EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
		AND 	R.ISCANCEL = 'N'
		<![CDATA[
		AND 	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') >= DATE_FORMAT(NOW(), '%Y-%m-%d')
		]]>
		ORDER BY E.EXAMDATE DESC
		LIMIT #{pageStart}, #{perPageNum};
   </select>
   
   <!-- 로그인 유저의 원서접수 총 갯수 조회 -->
   <select id="countAcceptListTotal"  parameterType="String" resultType="Integer">
   		SELECT 	count(*)
 		FROM   	YS_RECEIPT	R
 		INNER JOIN YS_EXAM	E	ON	E.EXAMID = R.EXAMID
 		INNER JOIN YS_EXAMZONE EZ ON EZ.EXAMZONEID = R.EXAMZONEID
 		WHERE	1 = 1
 		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
 		AND 	R.ISCANCEL = 'N'
		<![CDATA[
		AND 	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') >= DATE_FORMAT(NOW(), '%Y-%m-%d');
		]]> 
	</select>
	
	<!-- 수험표 리스트 -->
	<select id="getTicketList" parameterType="com.yeosin.apply.ApplyDto" resultMap="ApplyListResultMap">
		SELECT 	
				R.RECEIPTID 				-- 접수 ID
			,	R.USERID 					-- 유저 ID
			,	R.EXAMID					-- 시험 ID
			,   R.ISCANCEL					-- 취소여부
			,	E.EXAMNAME 					-- 시험명
			,   DATE_FORMAT(E.RECEIPTSTARTDATE, '%Y-%m-%d')    	AS RECEIPTSTARTDATE 	-- 접수시작일
         	,   DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d')       AS RECEIPTENDDATE    	-- 접수마감일
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d')				AS EXAMDATE				-- 시험일
			,	EZ.LOCALDETAIL 				-- 시험지역
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))	AS EXAMDEGREE	-- 시험회차
		FROM 	YS_RECEIPT					R 	
		INNER JOIN YS_EXAM 					E	ON 	E.EXAMID = R.EXAMID 	
		INNER JOIN YS_EXAMZONE				EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
		AND 	R.ISCANCEL = 'N'
		AND  	NOW() between E.CERTPRINTSTARTDATE AND E.CERTPRINTENDDATE
		ORDER BY E.EXAMDATE DESC
		LIMIT #{pageStart}, #{perPageNum};
   </select>
   
   <!-- 수험표 리스트 총 갯수 -->
   <select id="countTicketListTotal"  parameterType="String" resultType="Integer">
   		SELECT 	count(*)
 		FROM   	YS_RECEIPT	R
 		INNER JOIN YS_EXAM	E	ON	E.EXAMID = R.EXAMID
 		INNER JOIN YS_EXAMZONE EZ ON EZ.EXAMZONEID = R.EXAMZONEID
 		WHERE	1 = 1
 		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
 		AND 	R.ISCANCEL = 'N'
		AND  	NOW() between E.CERTPRINTSTARTDATE AND E.CERTPRINTENDDATE
	</select>
   
   	<!-- 로그인 유저의 접수별 상세현황 조회 -->
	<resultMap id="DetailApplyListResultMap" type="com.yeosin.apply.ApplyDto">
		<result column="RECEIPTDATE" property="receiptDate" />
		<result column="PAYMENTMETHOD" property="paymentMethod" />
		<result column="RECEIPTID" property="receiptId" />
		<result column="STUDENTCODE" property="studentCode" />
		<result column="EXAMFEE" property="examFee" />
		<result column="CERTID" property="certId" />
		<result column="PAYMENTID" property="paymentId" />
 		<association property="examDto" javaType="com.yeosin.apply.ExamDto">
			<result column="EXAMID" property="examId" />
			<result column="EXAMNAME" property="examName" />
			<result column="EXAMDEGREE" property="examDegree" />
			<result column="SUBJECTID" property="subjectId" />
			<result column="EXAMDATE" property="examDate" />
			<result column="GRADESTARTDATE" property="gradeStartDate" />
			<result column="GRADEENDDATE" property="gradeEndDate" />
			<result column="EXAMLOCAL" property="examLocal" />
			<result column="RECEIPTSTARTDATE" property="receiptStartDate" />
			<result column="RECEIPTENDDATE" property="receiptEndDate" />
		</association>
		<association property="userDto" javaType="com.yeosin.user.UserDto">
			<result column="USERID" property="userId" />
			<result column="USERNAME" property="userName" />
			<result column="PHONENUMBER" property="phoneNumber" />
			<result column="EMAILADDRESS" property="emailAddress" />
			<result column="BIRTHDATE" property="birthDate" />
			<result column="GENDER" property="gender" />
		 </association>
		 <association property="subjectDto" javaType="com.yeosin.apply.SubjectDto">
			<result column="SUBJECTNAME" property="subjectName" />
		</association>
		<association property="gradeDto" javaType="com.yeosin.apply.GradeDto">
			<result column="ALLSCORE" property="allScore" />
			<result column="ISPASS" property="isPass" />
			<result column="PASSCERTID" property="passCertId"/>
		</association>
		<association property="examZoneDto" javaType="com.yeosin.apply.ExamZoneDto">
			<result column="EXAMZONENAME" property="examZoneName" />
			<result column="EXAMZONEMAP" property="examZoneMap" />
			<result column="DESCRIPTION" property="description" />
		</association>
	</resultMap>
	<select id="GetDetailApplyList" parameterType="map" resultMap="DetailApplyListResultMap">
		SELECT 	
				E.EXAMID 			-- 시험 ID 
			,	E.EXAMNAME 			-- 시험명
			,	E.EXAMDEGREE 		-- 시험차수
			,	U.USERID 			-- 유저 ID
			,	U.USERNAME 			-- 유저명 
			,	U.PHONENUMBER 		-- 연락처
			,	U.EMAILADDRESS 		-- 이메일
			,	R.SUBJECTID 		-- 종목 ID
			,	S.SUBJECTNAME 		-- 종목명(자격종별)
			,	R.RECEIPTDATE 		-- 접수일
			,	E.EXAMDATE 			-- 시험일
			,	R.PAYMENTMETHOD 	-- 결제정보
		FROM 	YS_RECEIPT			R 
		INNER JOIN YS_EXAM  		E 	ON	E.EXAMID = R.EXAMID 
		INNER JOIN YS_USER  		U 	ON 	U.USERID = R.USERID 
		INNER JOIN YS_SUBJECT  	 	S 	ON 	S.SUBJECTID = R.SUBJECTID 
		INNER JOIN YS_EXAMZONE		EZ	ON	EZ.EXAMZONEID = R.EXAMZONEID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
		AND 	R.RECEIPTID = #{receiptId, jdbcType=VARCHAR};
   </select>
   
   <!-- 로그인 유저의 접수결과 조회 -->
   <select id="getDetailApplyInfo" parameterType="map" resultMap="DetailApplyListResultMap">
		SELECT 	
				E.EXAMID 			-- 시험 ID 
			,	E.EXAMNAME 			-- 시험명
			,	EZ.EXAMZONENAME 	-- 시험장명
			,	CONCAT(CONVERT(E.EXAMYEAR, CHAR), '-', CONVERT(E.EXAMDEGREE, CHAR))	AS EXAMDEGREE	-- 시험회차
			,	U.USERID 			-- 유저 ID
			,	U.USERNAME 			-- 유저명 
			,	U.PHONENUMBER 		-- 연락처
			,	U.EMAILADDRESS 		-- 이메일
			,	U.BIRTHDATE 		-- 생년월일
			,	R.SUBJECTID 		-- 종목 ID
			,	S.SUBJECTNAME 		-- 종목명(자격종별)
			,	DATE_FORMAT(R.RECEIPTDATE, '%Y-%m-%d') 	AS RECEIPTDATE
			,	DATE_FORMAT(E.RECEIPTSTARTDATE, '%Y-%m-%d') AS RECEIPTSTARTDATE -- 접수 시작일
			,	DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d') AS RECEIPTENDDATE -- 접수 마감일
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') 	AS EXAMDATE
			,	R.PAYMENTMETHOD 	-- 결제정보
			, 	R.RECEIPTID			-- 접수번호
			,	R.STUDENTCODE		-- 수험번호
			,	R.EXAMFEE			-- 응시료
			,	DATE_FORMAT(E.GRADESTARTDATE, '%Y-%m-%d') 	AS GRADESTARTDATE
			,	DATE_FORMAT(E.GRADEENDDATE, '%Y-%m-%d') 	AS GRADEENDDATE
			,	R.CERTID 			-- 교육수료증 번호
			,	R.PAYMENTID 		-- 결제 ID
			,	EZ.EXAMZONEMAP		-- 약도경로
			,	EZ.DESCRIPTION 		-- 주소
		FROM 	YS_RECEIPT			R 
		INNER JOIN YS_EXAM  		E 	ON	E.EXAMID = R.EXAMID 
		INNER JOIN YS_USER  		U 	ON 	U.USERID = R.USERID 
		INNER JOIN YS_SUBJECT  	 	S 	ON 	S.SUBJECTID = R.SUBJECTID 
		INNER JOIN YS_EXAMZONE		EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId}
		AND 	R.RECEIPTID = #{receiptId};
   </select>
   
   <!-- 응시결과 조회 -->
   <select id="getExamResult" parameterType="String" resultMap="DetailApplyListResultMap">
		SELECT 	
				E.EXAMID 			-- 시험 ID 
			,	E.EXAMNAME 			-- 시험명
			, 	DATE_FORMAT(E.GRADESTARTDATE , '%Y-%m-%d') AS GRADESTARTDATE -- 성적공고기간 시작(합격 발표일)
			, 	R.RECEIPTID			-- 접수번호
			, 	(
				CASE
					WHEN G.ALLSCORE >= 60 THEN '합격'
					ELSE '불합격'
				END 
				)	AS ISPASS
			,	G.PASSCERTID		-- 합격인증번호
			,   U.USERNAME			-- 유저이름
			,	S.SUBJECTNAME
		FROM 	YS_RECEIPT			R 
		INNER JOIN YS_EXAM  		E 	ON	E.EXAMID = R.EXAMID 
		INNER JOIN YS_GRADE 		G 	ON	G.RECEIPTID = R.RECEIPTID 
		INNER JOIN YS_USER			U	ON	U.USERID = R.USERID
		INNER JOIN YS_SUBJECT  	 	S 	ON 	S.SUBJECTID = R.SUBJECTID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId}
		AND     E.EXAMDATE >= DATE_ADD(NOW(), INTERVAL -36 MONTH)
		<![CDATA[
      	AND		DATE_FORMAT(E.GRADESTARTDATE, '%Y-%m-%d %H:%i:%S') < DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S');
      	]]>
   </select>
   
    <!-- 로그인 유저의 원서접수 현황 총 갯수 조회 -->
   <select id="countApplyReceptionStatusListTotal"  parameterType="String" resultType="Integer">
   		SELECT 	count(*)
 		FROM   	YS_RECEIPT	R
 		INNER JOIN YS_EXAM	E	ON	E.EXAMID = R.EXAMID
 		INNER JOIN YS_EXAMZONE EZ ON EZ.EXAMZONEID = R.EXAMZONEID
 		WHERE	1 = 1
 		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
 		AND 	R.ISCANCEL = 'N'
 		<![CDATA[
		AND 	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') >= '2022-01-01'
		]]> 
	</select>
	
	<!-- 로그인 유저의 원서접수 리스트 조회(LIMIT 페이징) -->
	<select id="getApplyReceptionStatusList" parameterType="com.yeosin.apply.ApplyDto" resultMap="ApplyListResultMap">
		SELECT 	
				R.RECEIPTID 				-- 접수 ID
			,	R.USERID 					-- 유저 ID
			,	R.EXAMID					-- 시험 ID
			,   R.ISCANCEL					-- 취소여부
			,	E.EXAMNAME 					-- 시험명
			, 	E.EXAMDEGREE				-- 시험회차
         	,   DATE_FORMAT(E.RECEIPTENDDATE, '%Y-%m-%d %H:%i:%S')       AS RECEIPTENDDATE    	-- 접수마감일
			,	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d')				AS EXAMDATE				-- 시험일
			,	EZ.LOCAL					-- 시험지역
			,	EZ.LOCALDETAIL 				-- 시험지역
		FROM 	YS_RECEIPT					R 	
		INNER JOIN YS_EXAM 					E	ON 	E.EXAMID = R.EXAMID 	
		INNER JOIN YS_EXAMZONE				EZ 	ON 	EZ.EXAMZONEID = R.EXAMZONEID
		WHERE 	1 = 1
		AND 	R.USERID = #{userId, jdbcType=VARCHAR}
		AND 	R.ISCANCEL = 'N'
		<![CDATA[
		AND 	DATE_FORMAT(E.EXAMDATE, '%Y-%m-%d') >= '2022-01-01'
		]]> 
		ORDER BY E.EXAMDATE DESC
		LIMIT #{pageStart}, #{perPageNum};
   </select>
   
   <!-- 접수번호의 MAX값 조회 -->
   <select id="getMaxReceiptNumber" resultType="String">
	   	SELECT 
	   			<![CDATA[
				CASE WHEN CONVERT(CONCAT(CONVERT(DATE_FORMAT(NOW(), '%Y%m%d'), CHAR), '00000'), UNSIGNED)	
						  > MAX(CONVERT(RIGHT(RECEIPTID, 13), UNSIGNED))
					 THEN CONVERT(CONCAT(CONVERT(DATE_FORMAT(NOW(), '%Y%m%d'), CHAR), '00000'), CHAR)
					 ELSE CONVERT(MAX(CONVERT(RIGHT(RECEIPTID, 13), UNSIGNED)), CHAR) END	AS  MAXRECEIPTID
				]]>
		FROM 	YS_RECEIPT
		WHERE 	1 = 1;
	</select>
	
	<!-- 새로운 접수 Insert (결제 완료건에 대해) -->
	<insert id="setReceiptInfo" parameterType="com.yeosin.apply.ApplyDto">
		INSERT INTO YS_RECEIPT (RECEIPTID, USERID, EXAMID, CERTID, RECEIPTDATE, ISCANCEL
								, STUDENTCODE, SEATNUMBER, EXAMZONEID, PAYMENTMETHOD, CARDNAME, PAYMENTDATE, EXAMFEE, PAYMENTID, SUBJECTID)
		VALUES (#{receiptId}, #{userId}, #{examId}, #{certId}, NOW(), 'N'
				, #{studentCode}, null, #{examZoneId}, #{paymentMethod}, #{cardName}, now(), #{examFee}, #{paymentId}, #{subjectId});
	</insert>
	
   <!-- 해당시험에 이미 접수된 건이 있는지 확인 -->
   <select id="getIsReceipt"  parameterType="map" resultType="Integer">
		SELECT 	COUNT(*)
		FROM 	YS_RECEIPT
		WHERE 	1 = 1
		AND 	USERID = #{userId, jdbcType=VARCHAR}
		AND 	EXAMID = #{examId, jdbcType=VARCHAR}
		AND 	ISCANCEL = 'N'
	</select>
	
	<update id="setPaymentInfo" parameterType="com.yeosin.apply.ApplyDto">
		UPDATE YS_RECEIPT
		SET
			PAYMENTMETHOD	=	#{paymentMethod},
			EXAMFEE			=	#{examFee},
			PAYMENTID		=	#{paymentId},
			PAYMENTDATE		= 	now()
		WHERE 	1 = 1
		AND 	USERID = #{userId}
		AND		RECEIPTID = #{receiptId}
	</update>
	
	<!-- 접수 취소여부 업데이트 -->
	<update id="setCancelReceipt" parameterType="map">
		UPDATE 	YS_RECEIPT
		SET		ISCANCEL = 'Y',
				PAYMENTCANCELDATE =	NOW(),
				SEATNUMBER = NULL
		WHERE 	1 = 1
		AND 	USERID = #{userId, jdbcType=VARCHAR}
		AND		RECEIPTID = #{receiptId, jdbcType=VARCHAR};
	</update>
	
	<!-- 해당접수가 이미 취소됬는지 확인 -->
   <select id="getIsCancelReceipt"  parameterType="map" resultType="String">
		SELECT 	ISCANCEL 
		FROM 	YS_RECEIPT
		WHERE 	1 = 1
		AND 	USERID = #{userId, jdbcType=VARCHAR}
		AND 	RECEIPTID = #{receiptId, jdbcType=VARCHAR};
	</select>
	
	<!-- 결제실패 Exception일때 접수데이터 삭제 -->
   <select id="setDeleteReceiptInfo"  parameterType="String">
		DELETE 	
		FROM 	YS_RECEIPT
		WHERE 	RECEIPTID = #{receiptId, jdbcType=VARCHAR};
	</select>
	
	<select id="selectPassUser"  parameterType="String" resultMap="DetailApplyListResultMap">
		SELECT
				MEM.USERNAME
			, 	REPLACE(MEM.BIRTHDATE,'-','') 						AS BIRTHDATE
			,	(CASE WHEN MEM.GENDER='남' THEN '1' ELSE '2' END ) 	AS GENDER
			,	IFNULL(RECEIPT.CERTID, "") 							AS	CERTID
			, 	IFNULL(GRADE.PASSCERTID, "") 						AS	PASSCERTID
			, 	DATE_FORMAT(EXAM.GRADESTARTDATE, '%Y-%m-%d')		AS	GRADESTARTDATE
		FROM YS_RECEIPT RECEIPT
			INNER JOIN YS_USER MEM ON MEM.USERID = RECEIPT.USERID
			INNER JOIN YS_EXAM EXAM ON RECEIPT.EXAMID = EXAM.EXAMID
			INNER JOIN YS_GRADE GRADE ON RECEIPT.RECEIPTID = GRADE.RECEIPTID
		WHERE DATE_FORMAT(EXAM.EXAMDATE, '%Y-%m-%d') = #{examDate}
			AND GRADE.ISPASS = 'Y'
		ORDER BY RECEIPT.RECEIPTID 
	</select>
	
</mapper>
